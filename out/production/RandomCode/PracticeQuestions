Minimum Spanning Trees
C-Level:
    Problem 2 from 2009 Final:
        a. B-D, D-G, E-F, C-H, F-H, G-C, A-H
        b. A-H, C-H, F-H, E-F, C-G, D-G, B-D

2. Would Kruskal or Prim’s algorithm work on a directed graph?
False, consider the directed graph

A -> B <-C
If we start Prim's at A, we will simply skip the edge B <- C
For kruskal's algorithm, we must somehow collect all edges and sort them. If we cannot reach
one edge, Kruskal's fails.

3. True or false: Adding a constant to every edge weight does not change the solution to the
MST problem (assume unique edge weights).
True

4. True or false: Multiplying all edges weights with a constant does not change the solution
to the MST problem (assume unique edge weights).
False

consider the graph
   B
A       D
    C
Where A-B = w, A-C = x, B-D = y, C-D = z
w, x, y, z > 0

if we multiplied by a negative constant factor, that the solution to this MST will be
flipped.

True or false: It is possible that the only Shortest Path Tree is the only Minimum Spanning Tree.
True

True or false: Prim’s Algorithm and Kruskal’s algorithm will always return the same result.
False

B-level
1.Adapted from Algorithms 4.3.8. Prove the following, known as the cycle property:
Given any cycle in an edge weighted graph (all edge weights distinct),
the edge of maximum weight in the cycle does not belong to the MST of the graph.

consider the following graph that is a cycle
    A
 x/  \y
 B____C
    z
where x < z, and y < z, therefore, max(x, y, z) = z

The definition of a minimum spanning tree is to have the minimum distance from the tree.
Thus to connect B to the tree, we simply need to connect x. to connect C to the tree
we need to connect y. The largest value is not ever in the MST.

2. Princeton Fall 2009 final
    a. 1, 2, 3, 5, 6, 7, 8, 12
    b. the edge weight must be <= 2
    c. 6, 1, 3, 2, 5, 7, 8, 12
    d. let the edges that connect to x in G be denoted as E, and let the weight of the
    edge x-y be denoted as S. For every edge in E, if S + w < E, then the MST T is still valid
    in the graph G. Otherwise, T is not a valid MST in G if w is added onto S. In the worst case
    every edge in G is connected to x, making the worst case O(V) tine.

3. Princeton Fall 2012 final
    a. 10, 20, 30, 40, 50, 100
    b. 5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105
    d.5, 15, 25, 35, 45, 55
    c. 5, 15, 25, 35, 45, 55, 65, 75

Adapted from Algorithms 4.3.12. Suppose that a graph has distinct edge weights. Does its
shortest edge have to belong to the MST? Can its longest edge belong to the MST? Does a
min-weight edge on every cycle have to belong to the MST? Prove your answer to each question
or give a counterexample.

A graph by definition with only distinct edges can only have one unique MST. Given that we run
kruskal's algorithm to find the MST, kruskal's algorithm always includes the smallest edge first
in the MST. Thus, the smallest edge must always be in the MST with distinct edges.

The longest edge can be included in the graph. Consider a graph that contains V - 1
edges and V nodes. By the MST property, there must be V - 1 edges. Therefore, all edges,
including the longest edge must be included in this graph. Thus, for this particular graph,
a longest edge can be in the MST.

For the min weighted edge in a cycle, consider

